name: 'generate-sbom'
description:  'Generate and attach sbom'
inputs:
  # Required Parameters
  container-repository-name:
    description: 'The name of the container repository'
    required: true
    type: string
  # Optional parameter with defaults.
  container-registry-name:
    description: 'The name of the container registry'
    default: ghcr.io/microsoft/azure-orbital-space-sdk
  container-repository-tag:
    description: 'The tag of the container repository'
    type: string
  sbom-path:
    description: 'The path to the sbom'
    type: string
    default: /var/spacedev/sbom
  sbom-file-name:
    description: 'The name of the sbom file'
    type: string
    default: sbom.json
runs:
    using: 'composite'
    steps:
        - name: Generate SBOM
          shell: bash
          run: |
            if [[ -z "${{ inputs.container-repository-tag }}" ]]; then
              echo "Container repository tag set, using ${{ inputs.container-repository-tag }}"
              CONTAINER_TAG="${{ inputs.container-repository-tag }}"
            else
              echo "Container repository tag not set, checking env file"
              if [ -f "/var/spacedev/env/spacefx.env" ]; then
                echo "Source File found, loading environment variables"
                source /var/spacedev/env/spacefx.env
                CONTAINER_TAG="$SPACEFX_VERSION_$SPACEFX_CHANNEL"
                echo "Container tag is $CONTAINER_TAG"
              else
                echo "No source file found, exiting..."
                exit 1
              fi
            fi
            
            mkdir -p ${{ inputs.sbom-path }}
            syft --scope all-layers -o json=${{ inputs.sbom-path }}/${{ inputs.sbom-file-name }} ${{ inputs.container-registry-name }}/${{ inputs.container-repository-name }}:$CONTAINER_TAG

            cosign attach sbom --sbom ${{ inputs.sbom-path }}/${{ inputs.sbom-file-name }} ${{ inputs.container-registry-name }}/${{ inputs.container-repository-name }}:$CONTAINER_TAG
            
